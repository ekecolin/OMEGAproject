"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/chat_discord";
exports.ids = ["pages/api/chat_discord"];
exports.modules = {

/***/ "@pinecone-database/pinecone":
/*!**********************************************!*\
  !*** external "@pinecone-database/pinecone" ***!
  \**********************************************/
/***/ ((module) => {

module.exports = require("@pinecone-database/pinecone");

/***/ }),

/***/ "dotenv":
/*!*************************!*\
  !*** external "dotenv" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("dotenv");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "openai":
/*!*************************!*\
  !*** external "openai" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("openai");

/***/ }),

/***/ "langchain/embeddings/openai":
/*!**********************************************!*\
  !*** external "langchain/embeddings/openai" ***!
  \**********************************************/
/***/ ((module) => {

module.exports = import("langchain/embeddings/openai");;

/***/ }),

/***/ "langchain/vectorstores/pinecone":
/*!**************************************************!*\
  !*** external "langchain/vectorstores/pinecone" ***!
  \**************************************************/
/***/ ((module) => {

module.exports = import("langchain/vectorstores/pinecone");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat_discord&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fchat_discord.ts&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat_discord&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fchat_discord.ts&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_chat_discord_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/chat_discord.ts */ \"(api)/./pages/api/chat_discord.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_chat_discord_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_chat_discord_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_chat_discord_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_chat_discord_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/chat_discord\",\n        pathname: \"/api/chat_discord\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_chat_discord_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmNoYXRfZGlzY29yZCZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTJGYXBpJTJGY2hhdF9kaXNjb3JkLnRzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQ3dEO0FBQ3hEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyx1REFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsdURBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVELHFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3Jjb2ZwZGYvP2FlYjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2FwaS9jaGF0X2Rpc2NvcmQudHNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9jaGF0X2Rpc2NvcmRcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9jaGF0X2Rpc2NvcmRcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat_discord&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fchat_discord.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/chat_discord.ts":
/*!***********************************!*\
  !*** ./pages/api/chat_discord.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ translate)\n/* harmony export */ });\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! openai */ \"openai\");\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(openai__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_pineconeStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/utils/pineconeStore */ \"(api)/./utils/pineconeStore.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_utils_pineconeStore__WEBPACK_IMPORTED_MODULE_1__]);\n_utils_pineconeStore__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n// https://platform.openai.com/docs/overview\n// https://www.pinecone.io/learn/vector-database/\n\n\n// Configure the OpenAI API with your API key from environment variables.\nconst configuration = new openai__WEBPACK_IMPORTED_MODULE_0__.Configuration({\n    apiKey: process.env.OPENAI_API_KEY\n});\nconst openai = new openai__WEBPACK_IMPORTED_MODULE_0__.OpenAIApi(configuration);\n// Handler for processing API requests - extracting messages and userName from the request body - https://nextjs.org/docs/pages/building-your-application/routing/api-routes - It attempts to convert text responses to speech if possible.\nasync function translate(req, res) {\n    const { messages, userName } = req.body;\n    // Processing incoming messages to generate a response text\n    const translatedText = await askOpenAI({\n        messages,\n        userName\n    });\n    try {\n        // Attempt to convert the response text to speech\n        const audioDataBase64 = await convertTextToSpeech(translatedText);\n        // On success, return the audio data and the original text\n        res.setHeader(\"Content-Type\", \"application/json\");\n        res.status(200).json({\n            audioDataBase64,\n            translatedText,\n            voiceEnabled: true\n        });\n    } catch (error) {\n        // Return the response text response if text-to-speech conversion fails\n        console.error(\"Voice feature unavailable:\", error);\n        res.setHeader(\"Content-Type\", \"application/json\");\n        res.status(200).json({\n            translatedText,\n            voiceEnabled: false\n        });\n    }\n}\nasync function convertTextToSpeech(text) {\n    // Configuring request to ElevenLabs API for text-to-speech conversion\n    const TRIAL_URL = \"https://api.elevenlabs.io\";\n    const API_PATH = `/v1/text-to-speech/${process.env.ELEVENLABS_VOICE_ID}`;\n    const API_KEY = process.env.ELEVENLABS_KEY;\n    try {\n        // Perform the API request to convert text to speech\n        const response = await fetch(TRIAL_URL + API_PATH, {\n            method: \"POST\",\n            body: JSON.stringify({\n                text: text,\n                model_id: \"eleven_monolingual_v1\"\n            }),\n            headers: {\n                \"xi-api-key\": API_KEY,\n                \"Content-Type\": \"application/json\",\n                accept: \"audio/mpeg\"\n            }\n        });\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        // Retrieves the response body as an ArrayBuffer, which represents binary data and it converts the ArrayBuffer into a base64-encoded string to facilitate easy transmission over JSON.\n        // Convert response to base64 encoded string for transmission\n        const audioData = await response.arrayBuffer();\n        const audioDataBase64 = Buffer.from(audioData).toString(\"base64\");\n        return audioDataBase64; // This ensures the function returns a string as expected.\n    } catch (error) {\n        console.error(\"Error converting text to speech:\", error + \" \\nPlease check your voice quota on Elevenlabs, as voiceover is not available.\" + \"\\nEnsure your apiKeys and voice ID has ben inserted correctly\");\n        throw error;\n    }\n}\n// Function to query OpenAI to generate a response based on the input messages\nasync function askOpenAI({ messages, userName }) {\n    // Initialize pineconeStore for vector search capabilities.\n    const pinecone = await (0,_utils_pineconeStore__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n    // Log the received messages for debugging.\n    console.log(\"messages req: \", messages);\n    // Enhance the last message content with contextual snippets if messages exist - adding extra info to last message sent gives AI more context before geenrating a response\n    if (messages?.length > 0) {\n        const lastMsgContent = messages[messages.length - 1].content;\n        // Perform a similarity search to find relevant context snippets - helps AI better understand the conversation and provide resposnes that are more accurate and relevant to the users query = quality interaction\n        const data = await pinecone.similaritySearch(lastMsgContent, 3);\n        // Log the number of context snippets found.\n        console.log(\"pinecone data.length of relevant info: \", data.length);\n        // Update the last message with found context snippets for better responses.\n        const updatedMsgContent = `\n    user question/statement: ${lastMsgContent}\n    context snippets:\n    ---\n    1) ${data?.[0]?.pageContent}\n    ---\n    2) ${data?.[1]?.pageContent}\n    ---\n    3) ${data?.[2]?.pageContent}\n    `;\n        messages[messages.length - 1].content = updatedMsgContent;\n    }\n    try {\n        // Make a request to OpenAI's ChatGPT with the enhanced message content.\n        const response = await openai.createChatCompletion({\n            model: \"gpt-3.5-turbo-0301\",\n            // Custom prompt to guide the AI's responses, including user and context information.\n            messages: [\n                {\n                    role: \"system\",\n                    content: `\n          Never menttion context snippets. Your name is Omega, an AI gaming companion with a specialized focus on 'Shining Force', 'Red Dead Redemption 2', 'The Witcher 3: Wild Hunt', 'The Last Of Us Part 1' and 'The Last Of Us Part 2'. Begin each interaction with a personalized greeting, addressing the user by name, ${userName}. Your expertise is derived from a carefully curated database, and your responses should be reflective of ongoing conversations about these games.\n\n          If a user asks about a game outside of your expertise in 'Shining Force', 'Red Dead Redemption 2', 'The Witcher 3: Wild Hunt', 'The Last Of Us Part 1' and 'The Last Of Us Part 2' explain that you are currently unable to provide guidance on that particular game, it is noted as an addition for future updates with other games.\n\n          Stay attuned to the details of the user's queries, providing intuitive guidance and knowledgeable insights. If the conversation shifts to a game outside your current scope, gently remind the user of your specialized focus and express your willingness to assist with any of the supported games.\n\n          Keep your assistance focused and relevant to the user's experience. Your primary goal is to offer support that feels personalized, accurate, and sensitive to the nuances of their gaming journey. Avoid referencing the source of your knowledge or any database details, maintaining immersion and a seamless interaction.\n\n          When a user shifts the topic, directly address their current question, avoiding fallbacks to previous interactions. If you require more details to provide a helpful response, don't hesitate to ask the user to specify their needs. Your ultimate aim is to support and enhance the user's gaming experience through accurate, focused, and empathetic engagement, always grounded in the present discourse.\n        `\n                },\n                ...messages || [\n                    {\n                        role: \"user\",\n                        content: \"Hi There!\"\n                    }\n                ]\n            ]\n        });\n        // Return the AI-generated response text.\n        return response?.data?.choices?.[0]?.message?.content ?? \"\";\n    } catch (e) {\n        console.log(\"Error in response: \", e.message);\n        return \"There was an error in processing the ai response.\";\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/chat_discord.ts\n");

/***/ }),

/***/ "(api)/./utils/pineconeStore.ts":
/*!********************************!*\
  !*** ./utils/pineconeStore.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dotenv */ \"dotenv\");\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dotenv__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _pinecone_database_pinecone__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pinecone-database/pinecone */ \"@pinecone-database/pinecone\");\n/* harmony import */ var _pinecone_database_pinecone__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_pinecone_database_pinecone__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var langchain_vectorstores_pinecone__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! langchain/vectorstores/pinecone */ \"langchain/vectorstores/pinecone\");\n/* harmony import */ var langchain_embeddings_openai__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! langchain/embeddings/openai */ \"langchain/embeddings/openai\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([langchain_vectorstores_pinecone__WEBPACK_IMPORTED_MODULE_2__, langchain_embeddings_openai__WEBPACK_IMPORTED_MODULE_3__]);\n([langchain_vectorstores_pinecone__WEBPACK_IMPORTED_MODULE_2__, langchain_embeddings_openai__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n// https://docs.pinecone.io/docs/new-api\n// https://sdk.pinecone.io/typescript/\n// Importing dotenv package for loading environment variables from .env file\n\n\n\n\n// Initialize dotenv to read .env file\ndotenv__WEBPACK_IMPORTED_MODULE_0__.config();\nconst pineconeStore = async ()=>{\n    // Initialize a new PineconeClient object using our API and environemnt key\n    const pinecone = new _pinecone_database_pinecone__WEBPACK_IMPORTED_MODULE_1__.PineconeClient();\n    // Initialize a new OpenAIEmbeddings object to be used for generating embeddings \n    const embedder = new langchain_embeddings_openai__WEBPACK_IMPORTED_MODULE_3__.OpenAIEmbeddings();\n    // Call the init method on the Pinecone client to configure it with environment and API key\n    await pinecone.init({\n        environment: process.env.PINECONE_ENVIRONMENT,\n        apiKey: process.env.PINECONE_API_KEY\n    });\n    // The index name is retrieved from environment variables\n    const pineconeIndex = pinecone.Index(process.env.PINECONE_INDEX);\n    // This sets up a connection to an existing Pinecone index with the capability to use embeddings\n    const pineconeStore = await langchain_vectorstores_pinecone__WEBPACK_IMPORTED_MODULE_2__.PineconeStore.fromExistingIndex(embedder, {\n        pineconeIndex\n    });\n    return pineconeStore;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (pineconeStore);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi91dGlscy9waW5lY29uZVN0b3JlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQSx3Q0FBd0M7QUFDeEMsc0NBQXNDO0FBQ3RDLDRFQUE0RTtBQUMzQztBQUM0QjtBQUNHO0FBQ0Q7QUFFL0Qsc0NBQXNDO0FBQ3RDQSwwQ0FBYTtBQUViLE1BQU1LLGdCQUFnQjtJQUNwQiwyRUFBMkU7SUFDM0UsTUFBTUMsV0FBVyxJQUFJTCx1RUFBY0E7SUFDbkMsaUZBQWlGO0lBQ2pGLE1BQU1NLFdBQVcsSUFBSUoseUVBQWdCQTtJQUVyQywyRkFBMkY7SUFDM0YsTUFBTUcsU0FBU0UsSUFBSSxDQUFDO1FBQ2xCQyxhQUFhQyxRQUFRQyxHQUFHLENBQUNDLG9CQUFvQjtRQUM3Q0MsUUFBUUgsUUFBUUMsR0FBRyxDQUFDRyxnQkFBZ0I7SUFDdEM7SUFFQSx5REFBeUQ7SUFDekQsTUFBTUMsZ0JBQWdCVCxTQUFTVSxLQUFLLENBQUNOLFFBQVFDLEdBQUcsQ0FBQ00sY0FBYztJQUUvRCxnR0FBZ0c7SUFDaEcsTUFBTVosZ0JBQWdCLE1BQU1ILDBFQUFhQSxDQUFDZ0IsaUJBQWlCLENBQUNYLFVBQVU7UUFDcEVRO0lBQ0Y7SUFFQSxPQUFPVjtBQUNUO0FBRUEsaUVBQWVBLGFBQWFBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zcmNvZnBkZi8uL3V0aWxzL3BpbmVjb25lU3RvcmUudHM/ZDI5ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBodHRwczovL2RvY3MucGluZWNvbmUuaW8vZG9jcy9uZXctYXBpXG4vLyBodHRwczovL3Nkay5waW5lY29uZS5pby90eXBlc2NyaXB0L1xuLy8gSW1wb3J0aW5nIGRvdGVudiBwYWNrYWdlIGZvciBsb2FkaW5nIGVudmlyb25tZW50IHZhcmlhYmxlcyBmcm9tIC5lbnYgZmlsZVxuaW1wb3J0ICogYXMgZG90ZW52IGZyb20gXCJkb3RlbnZcIjtcbmltcG9ydCB7IFBpbmVjb25lQ2xpZW50IH0gZnJvbSBcIkBwaW5lY29uZS1kYXRhYmFzZS9waW5lY29uZVwiO1xuaW1wb3J0IHsgUGluZWNvbmVTdG9yZSB9IGZyb20gXCJsYW5nY2hhaW4vdmVjdG9yc3RvcmVzL3BpbmVjb25lXCI7XG5pbXBvcnQgeyBPcGVuQUlFbWJlZGRpbmdzIH0gZnJvbSBcImxhbmdjaGFpbi9lbWJlZGRpbmdzL29wZW5haVwiO1xuXG4vLyBJbml0aWFsaXplIGRvdGVudiB0byByZWFkIC5lbnYgZmlsZVxuZG90ZW52LmNvbmZpZygpO1xuXG5jb25zdCBwaW5lY29uZVN0b3JlID0gYXN5bmMgKCkgPT4ge1xuICAvLyBJbml0aWFsaXplIGEgbmV3IFBpbmVjb25lQ2xpZW50IG9iamVjdCB1c2luZyBvdXIgQVBJIGFuZCBlbnZpcm9uZW1udCBrZXlcbiAgY29uc3QgcGluZWNvbmUgPSBuZXcgUGluZWNvbmVDbGllbnQoKTtcbiAgLy8gSW5pdGlhbGl6ZSBhIG5ldyBPcGVuQUlFbWJlZGRpbmdzIG9iamVjdCB0byBiZSB1c2VkIGZvciBnZW5lcmF0aW5nIGVtYmVkZGluZ3MgXG4gIGNvbnN0IGVtYmVkZGVyID0gbmV3IE9wZW5BSUVtYmVkZGluZ3MoKTtcblxuICAvLyBDYWxsIHRoZSBpbml0IG1ldGhvZCBvbiB0aGUgUGluZWNvbmUgY2xpZW50IHRvIGNvbmZpZ3VyZSBpdCB3aXRoIGVudmlyb25tZW50IGFuZCBBUEkga2V5XG4gIGF3YWl0IHBpbmVjb25lLmluaXQoe1xuICAgIGVudmlyb25tZW50OiBwcm9jZXNzLmVudi5QSU5FQ09ORV9FTlZJUk9OTUVOVCBhcyBzdHJpbmcsXG4gICAgYXBpS2V5OiBwcm9jZXNzLmVudi5QSU5FQ09ORV9BUElfS0VZIGFzIHN0cmluZyxcbiAgfSk7XG5cbiAgLy8gVGhlIGluZGV4IG5hbWUgaXMgcmV0cmlldmVkIGZyb20gZW52aXJvbm1lbnQgdmFyaWFibGVzXG4gIGNvbnN0IHBpbmVjb25lSW5kZXggPSBwaW5lY29uZS5JbmRleChwcm9jZXNzLmVudi5QSU5FQ09ORV9JTkRFWCBhcyBzdHJpbmcpO1xuXG4gIC8vIFRoaXMgc2V0cyB1cCBhIGNvbm5lY3Rpb24gdG8gYW4gZXhpc3RpbmcgUGluZWNvbmUgaW5kZXggd2l0aCB0aGUgY2FwYWJpbGl0eSB0byB1c2UgZW1iZWRkaW5nc1xuICBjb25zdCBwaW5lY29uZVN0b3JlID0gYXdhaXQgUGluZWNvbmVTdG9yZS5mcm9tRXhpc3RpbmdJbmRleChlbWJlZGRlciwge1xuICAgIHBpbmVjb25lSW5kZXgsXG4gIH0pO1xuXG4gIHJldHVybiBwaW5lY29uZVN0b3JlO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgcGluZWNvbmVTdG9yZTtcbiJdLCJuYW1lcyI6WyJkb3RlbnYiLCJQaW5lY29uZUNsaWVudCIsIlBpbmVjb25lU3RvcmUiLCJPcGVuQUlFbWJlZGRpbmdzIiwiY29uZmlnIiwicGluZWNvbmVTdG9yZSIsInBpbmVjb25lIiwiZW1iZWRkZXIiLCJpbml0IiwiZW52aXJvbm1lbnQiLCJwcm9jZXNzIiwiZW52IiwiUElORUNPTkVfRU5WSVJPTk1FTlQiLCJhcGlLZXkiLCJQSU5FQ09ORV9BUElfS0VZIiwicGluZWNvbmVJbmRleCIsIkluZGV4IiwiUElORUNPTkVfSU5ERVgiLCJmcm9tRXhpc3RpbmdJbmRleCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./utils/pineconeStore.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat_discord&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fchat_discord.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();